{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbServce","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","type","placeholder","value","onChange","target","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","creatorId","createdAt","Date","now","collection","add","onFileChange","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","maxLength","for","faPlus","accept","opacity","backgroundImage","faTimes","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Home","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAoBAA,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,6CACZE,UAAWF,6BACXG,cAAeH,yCACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKZ,IAAMO,EAAmBV,IAEnBW,EAAcX,IAASY,OACvBC,EAAWb,IAASc,YACpBC,EAAiBf,IAASgB,UCtBxB,cAA+B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACrBC,EAAUC,cADyB,EAEGC,mBAASH,EAAQI,aAFpB,mBAElCC,EAFkC,KAElBC,EAFkB,KAwBnCC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACbD,EAAME,iBACFV,EAAQI,cAAgBC,EAFf,gCAGHL,EAAQW,cAAc,CACxBP,YAAaC,IAJR,OAMTN,IANS,2CAAH,sDAUd,OACI,sBAAKa,UAAU,YAAf,UACI,uBAAML,SAAUA,EAAUK,UAAU,cAApC,UACK,IACD,uBACIC,KAAK,OACLC,YAAY,eACZC,MAAOV,EACPW,SAzBC,SAACR,GAAW,IAEXO,EACVP,EADAS,OAAUF,MAEdT,EAAkBS,IAsBNH,UAAU,cAEd,uBACIC,KAAK,SACLE,MAAM,iBACNH,UAAU,UACVM,MAAO,CACHC,UAAW,SAIvB,sBAAMP,UAAU,2BAA2BQ,QAnD7B,WAClB3B,EAAY4B,UACZpB,EAAQqB,KAAK,MAiDT,yBCUGC,EAjEE,WAAO,IAAD,EACOpB,mBAAS,IADhB,mBACZqB,EADY,KACLC,EADK,OAEatB,mBAAS,IAFtB,mBAEZuB,EAFY,KAEFC,EAFE,OAGiBxB,oBAAS,GAH1B,mBAGZyB,EAHY,KAGAC,EAHA,OAIO1B,mBAAS,IAJhB,mBAIZ2B,EAJY,KAILC,EAJK,KAMbf,EAAW,SAACR,GAAW,IAAD,EAGpBA,EADAS,OAAUe,EAFU,EAEVA,KAAMjB,EAFI,EAEJA,MAEP,UAATiB,EACAP,EAASV,GACO,aAATiB,GACPL,EAAYZ,IAGdR,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACbD,EAAME,iBADO,UAILkB,EAJK,gCAMQnC,EAAYwC,+BAA+BT,EAAOE,GAN1D,OAMLQ,EANK,+CASQzC,EAAY0C,2BAA2BX,EAAOE,GATtD,QASLQ,EATK,eAWTE,QAAQC,IAAIH,GAXH,kDAaTE,QAAQC,IAAR,MACAN,EAAS,KAAMO,SAdN,0DAAH,sDAkBd,OACI,qCACI,uBAAM/B,SAAUA,EAAUK,UAAU,YAApC,UACI,uBACIC,KAAK,OACLmB,KAAK,QACLlB,YAAY,QACZyB,UAAQ,EACRxB,MAAOS,EACPR,SAAUA,EACVJ,UAAU,cAEd,uBACIC,KAAK,WACLmB,KAAK,WACLlB,YAAY,WACZyB,UAAQ,EACRxB,MAAOW,EACPV,SAAUA,EACVJ,UAAU,cAEd,uBAAOC,KAAK,SAASE,MAAOa,EAAa,iBAAmB,UAC3DE,GAAS,sBAAMlB,UAAU,YAAhB,SAA6BkB,OAE3C,sBAAMV,QAzBQ,kBAAMS,GAAc,SAACW,GAAD,OAAWA,MAyBf5B,UAAU,aAAxC,SACKgB,EAAa,SAAW,uB,gBCtB1Ba,EAlCF,WACT,IAAMC,EAAa,uCAAG,WAAOlC,GAAP,mBAAAC,EAAA,4DAKL,YAHCuB,EACVxB,EADAS,OAAUe,MAIVW,EAAW,IAAInD,EAAiBE,KAAKkD,mBACrB,WAATZ,IACPW,EAAW,IAAInD,EAAiBE,KAAKmD,oBARvB,SAUCpD,EAAYqD,gBAAgBH,GAV7B,OAUZT,EAVY,OAWlBE,QAAQC,IAAIH,GAXM,2CAAH,sDAanB,OACI,sBAAKtB,UAAU,gBAAf,UACI,cAAC,IAAD,CACImC,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLhC,MAAO,CAAEiC,aAAc,MAE3B,cAAC,EAAD,IACA,sBAAKvC,UAAU,WAAf,UACI,yBAAQQ,QAASsB,EAAeV,KAAK,SAASpB,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBmC,KAAMK,SAEhD,yBAAQhC,QAASsB,EAAeV,KAAK,SAASpB,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBmC,KAAMM,gB,gBCiCjDC,EA9DD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACPrD,oBAAS,GADF,mBAC9BsD,EAD8B,KACrBC,EADqB,OAELvD,mBAASoD,EAASI,MAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAI/BC,EAAa,uCAAG,4BAAArD,EAAA,yDACZsD,EAAKC,OAAOC,QAAQ,+CAC1B7B,QAAQC,IAAI0B,IACRA,EAHc,gCAKRpE,EAASuE,IAAT,iBAAuBX,EAASY,KAAMC,SAL9B,WAMVb,EAASc,cANC,gCAOJxE,EAAeyE,WAAWf,EAASc,eAAeD,SAP9C,2CAAH,qDAWbG,EAAgB,kBAAMb,GAAW,SAAClB,GAAD,OAAWA,MAC5CjC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACbD,EAAME,iBACN0B,QAAQC,IAAI,SAAUkB,EAAUK,GAFnB,SAGPjE,EAASuE,IAAT,iBAAuBX,EAASY,KAAMK,OAAO,CAAEb,KAAMC,IAH9C,OAIbW,IAJa,2CAAH,sDAad,OACI,qBAAK3D,UAAU,QAAf,SACK6C,EACG,uBAAMlD,SAAUA,EAAUK,UAAU,sBAApC,UACI,uBACIC,KAAK,OACLC,YAAY,kBACZC,MAAO6C,EACP5C,SAfH,SAACR,GAAW,IAEXO,EACVP,EADAS,OAAUF,MAEd8C,EAAY9C,IAYIwB,UAAQ,IAEZ,uBAAO1B,KAAK,SAASE,MAAM,eAAeH,UAAU,YACpD,wBAAQQ,QAASmD,EAAjB,uBAGJ,qCACI,6BAAKhB,EAASI,OACbJ,EAASc,eAAiB,qBAAKI,IAAKlB,EAASc,gBAC7Cb,GACG,sBAAKkB,MAAM,iBAAX,UACI,sBAAMtD,QAAS0C,EAAf,SACI,cAAC,IAAD,CAAiBf,KAAM4B,QAE3B,sBAAMvD,QAASmD,EAAf,SACI,cAAC,IAAD,CAAiBxB,KAAM6B,iB,QC2CxCC,EA/FM,SAAC,GAAiB,IAAf7E,EAAc,EAAdA,QAAc,EACRG,mBAAS,IADD,mBAC3B2E,EAD2B,KACpBC,EADoB,OAEE5E,qBAFF,mBAE3B6E,EAF2B,KAEfC,EAFe,KAI5B1E,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACC,KAAVqE,EADS,oDAKbtE,EAAME,iBACF2D,EAAgB,MAChBW,EAPS,wBAQHE,EAAgBrF,EAAesF,MAAMC,MAArB,UAA8BpF,EAAQqF,IAAtC,YAA6CC,gBAR1D,SAScJ,EAAcK,UAAUP,EAAY,YATlD,cASHQ,EATG,iBAUaA,EAASL,IAAIM,iBAV1B,QAUTpB,EAVS,sBAYPd,EAAW,CACbI,KAAMmB,EACNY,UAAW1F,EAAQqF,IACnBM,UAAWC,KAAKC,MAChBxB,iBAhBS,UAkBP1E,EAASmG,WAAW,UAAUC,IAAIxC,GAlB3B,QAmBbwB,EAAS,IACTE,EAAc,IApBD,4CAAH,sDA4BRe,EAAe,SAACxF,GAAW,IAIvByF,EADFzF,EADAS,OAAUiF,MAEQ,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAEdC,EACjBD,EADAE,cAAiBD,OAErBtB,EAAcsB,IAElBJ,EAAOM,cAAcR,IAKzB,OACI,uBAAM1F,SAAUA,EAAUK,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACIA,UAAU,sBACVG,MAAO+D,EACP9D,SA7BC,SAACR,GAAW,IAEXO,EACVP,EADAS,OAAUF,MAEdgE,EAAShE,IA0BGF,KAAK,OACLC,YAAY,uBACZ4F,UAAW,MAEf,uBAAO7F,KAAK,SAASE,MAAM,SAASH,UAAU,2BAElD,wBAAO+F,IAAI,cAAc/F,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBmC,KAAM6D,SAE3B,uBACIzC,GAAG,cACHtD,KAAK,OACLgG,OAAO,UACP7F,SAAUgF,EACV9E,MAAO,CACH4F,QAAS,KAGjB,uBAAOjG,KAAK,OAAOgG,OAAO,UAAU7F,SAAUgF,IAC9C,uBAAOnF,KAAK,SAASE,MAAM,UAC1BiE,GACG,sBAAKpE,UAAU,0BAAf,UACI,qBACI6D,IAAKO,EACL9D,MAAO,CACH6F,gBAAiB/B,KAGzB,sBAAKpE,UAAU,qBAAqBQ,QAtC1B,kBAAM6D,EAAc,OAsC9B,UACI,0CACA,cAAC,IAAD,CAAiBlC,KAAMiE,gBCxFhC,cAAkB,IAAfhH,EAAc,EAAdA,QAAc,EACAG,mBAAS,IADT,mBACrB8G,EADqB,KACbC,EADa,KAc5B,OAXAC,qBAAU,WACNxH,EAASmG,WAAW,UAAUsB,YAAW,SAACC,GAEtC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACtD,GAAD,oBACjCC,GAAID,EAAIC,IACLD,EAAIhC,WAEXgF,EAAUI,QAEf,IAGC,sBAAK1G,UAAU,YAAf,UACI,cAAC,EAAD,CAAcZ,QAASA,IACvB,qBAAKkB,MAAO,CAAEC,UAAW,IAAzB,SACK8F,EAAOO,KAAI,SAAC1C,GAAD,OACR,cAAC,EAAD,CAEIvB,SAAUuB,EACVtB,QAASsB,EAAMY,YAAc1F,EAAQqF,KAFhCP,EAAMX,aCSpBsD,EA5BI,SAAC,GAAD,IAAGzH,EAAH,EAAGA,QAAH,OACf,8BACI,qBAAIkB,MAAO,CAAEwG,QAAS,OAAQC,eAAgB,SAAUxG,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMyG,GAAG,IAAI1G,MAAO,CAAE2G,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiB9E,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CACI0E,GAAG,WACH1G,MAAO,CACH4G,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPlB,UAUI,cAAC,IAAD,CAAiBlF,KAAMmF,IAAQjF,MAAO,UAAWC,KAAK,OACtD,sBAAMhC,MAAO,CAAEC,UAAW,IAA1B,SACKnB,EAAQI,YAAR,UAAyBJ,EAAQI,YAAjC,kBAA0D,uBCgBpE+H,EApCG,SAAC,GAA0C,IAAxCpI,EAAuC,EAAvCA,YAAaqI,EAA0B,EAA1BA,WAAYpI,EAAc,EAAdA,QAC1C,OACI,eAAC,IAAD,WACKoI,GAAc,cAAC,EAAD,CAAYpI,QAASA,IACpC,cAAC,IAAD,UACKoI,EACG,sBACIlH,MAAO,CACHmH,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRpH,UAAW,GACXuG,QAAS,OACTC,eAAgB,UAPxB,UAUI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAACC,EAAD,CAAM1I,QAASA,MAEnB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,WAAlB,SACI,cAACE,EAAD,CAAS3I,QAASA,EAASD,YAAaA,SAIhD,mCACI,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cCoBbG,MA7Cf,WAAgB,IAAD,EACazI,oBAAS,GADtB,mBACJ0I,EADI,KACEC,EADF,OAEmB3I,mBAAS,MAF5B,mBAEJH,EAFI,KAEK+I,EAFL,KAIX5B,qBAAU,WACN1H,EAAYuJ,oBAAmB,SAACC,GAGxBF,EADAE,EACW,CACP7I,YAAa6I,EAAK7I,YAClBiF,IAAK4D,EAAK5D,IACV1E,cAAe,SAACuI,GAAD,OAAUD,EAAKtI,cAAcuI,KAGrC,MAEfJ,GAAQ,QAGb,IAKH,IAAM/I,EAAc,WAChB,IAAMkJ,EAAOxJ,EAAY0J,YACzBJ,EAAW,CACP3I,YAAa6I,EAAK7I,YAClBiF,IAAK4D,EAAK5D,IACV1E,cAAe,SAACuI,GAAD,OAAUD,EAAKtI,cAAcuI,OAIpD,OACI,mCACKL,EACG,cAACO,EAAD,CAAQhB,WAAYpI,EAASA,QAASA,EAASD,YAAaA,IAE5D,qB,MCzChBsJ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.3b34568b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n/* \r\n    Github에 키를 직접 업로드하는 것을 피하고자 env 파일로 별도로 만들어 작성하였음.\r\n    그러나 빌드 시점에서는 결국에는 보일 수밖에 없다.\r\n    단지!!! Github에 업로드하여 키가 노출되는 것을 피하기 위하여 작성함.\r\n*/\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbServce = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbServce\r\n            .collection('nweets')\r\n            .where('creatorId', '==', userObj.uid)\r\n            // .orderBy('createdAt', 'desc') 색인이 생성된 이후에 사용할 수 있다.\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={onSubmit} className='profileForm'>\r\n                {' '}\r\n                <input\r\n                    type='text'\r\n                    placeholder='Display name'\r\n                    value={newDisplayName}\r\n                    onChange={onChange}\r\n                    className='formInput'\r\n                />\r\n                <input\r\n                    type='submit'\r\n                    value='Update Profile'\r\n                    className='formBtn'\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className='container'>\r\n                <input\r\n                    type='text'\r\n                    name='email'\r\n                    placeholder='Email'\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className='authInput'\r\n                />\r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='Password'\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className='authInput'\r\n                />\r\n                <input type='submit' value={newAccount ? 'Create Account' : 'Login'} />\r\n                {error && <span className='authError'>{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className='authSwitch'>\r\n                {newAccount ? 'Log in' : 'Create Account'}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { firebaseInstance, authService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <div className='authContainer'>\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={'#04AAFF'}\r\n                size='3x'\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className='authBtns'>\r\n                <button onClick={onSocialClick} name='google' className='authBtn'>\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name='github' className='authBtn'>\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;\r\n","import { dbServce, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n        console.log(ok);\r\n        if (ok) {\r\n            // delete nweet\r\n            await dbServce.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl) {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log('update', nweetObj, newNweet);\r\n        await dbServce.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        toggleEditing();\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className='nweet'>\r\n            {editing ? (\r\n                <form onSubmit={onSubmit} className='container nweetEdit'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Edit your nweet'\r\n                        value={newNweet}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                    <input type='submit' value='Update Nweet' className='formBtn' />\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        <div class='nweet__actions'>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default Nweet;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbServce, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState();\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === '') {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        let attachmentUrl = null;\r\n        if (attachment) {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, 'data_url');\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            creatorId: userObj.uid,\r\n            createdAt: Date.now(),\r\n            attachmentUrl,\r\n        };\r\n        await dbServce.collection('nweets').add(nweetObj);\r\n        setNweet('');\r\n        setAttachment('');\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(null);\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className='factoryForm'>\r\n            <div className='factoryInput__container'>\r\n                <input\r\n                    className='factoryInput__input'\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type='text'\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type='submit' value='&rarr;' className='factoryInput__arrow' />\r\n            </div>\r\n            <label for='attach-file' className='factoryInput__label'>\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id='attach-file'\r\n                type='file'\r\n                accept='image/*'\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            <input type='file' accept='image/*' onChange={onFileChange} />\r\n            <input type='submit' value='Nweet' />\r\n            {attachment && (\r\n                <div className='factoryForm__attachment'>\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className='factoryForm__clear' onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from 'components/Nweet';\r\nimport { dbServce } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport NweetFactory from '../components/NweetFactory';\r\n\r\nexport default ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbServce.collection('nweets').onSnapshot((snapshot) => {\r\n            // 🕧 onSnapshot 메서드를 사용하면 실시간으로 확인할 수 있다.\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n            <li>\r\n                <Link to='/' style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x' />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to='/profile'\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size='2x' />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: '100%',\r\n                            margin: '0 auto',\r\n                            marginTop: 80,\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <Route exact path='/'>\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path='/profile'>\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path='/'>\r\n                            <Auth />\r\n                        </Route>\r\n                        {/* <Redirect from='*' to='/' /> */}\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from 'react';\r\nimport Router from 'components/Router';\r\n/*\r\n    🤷‍♂️ 파일 Absolute imports 설정하기\r\n    https://create-react-app.dev/docs/importing-a-component/\r\n*/\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            // console.log(user, !!user);\r\n            if (user) {\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    updateProfile: (args) => user.updateProfile(args),\r\n                });\r\n            } else {\r\n                setUserObj(null);\r\n            }\r\n            setInit(true);\r\n            refreshUser;\r\n        });\r\n    }, []);\r\n    // setInterval(() => {\r\n    //     console.log(authService.currentUser);\r\n    // }, 2000);\r\n\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {init ? (\r\n                <Router isLoggedIn={userObj} userObj={userObj} refreshUser={refreshUser} />\r\n            ) : (\r\n                'Initializing...'\r\n            )}\r\n            {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}